Saved package config for hfractal-0.3.2.1 written by Cabal-1.6.0.3 using ghc-6.10
LocalBuildInfo {installDirTemplates = InstallDirs {prefix = "/home/chris/.cabal", bindir = "$prefix/bin", libdir = "$prefix/lib", libsubdir = "$pkgid/$compiler", dynlibdir = "$libdir", libexecdir = "$prefix/libexec", progdir = "$libdir/hugs/programs", includedir = "$libdir/$libsubdir/include", datadir = "$prefix/share", datasubdir = "$pkgid", docdir = "$datadir/doc/$pkgid", mandir = "$datadir/man", htmldir = "$docdir/html", haddockdir = "$htmldir"}, compiler = Compiler {compilerId = CompilerId GHC (Version {versionBranch = [6,10,4], versionTags = []}), compilerExtensions = [(CPP,"-XCPP"),(PostfixOperators,"-XPostfixOperators"),(PatternGuards,"-XPatternGuards"),(UnicodeSyntax,"-XUnicodeSyntax"),(MagicHash,"-XMagicHash"),(PolymorphicComponents,"-XPolymorphicComponents"),(ExistentialQuantification,"-XExistentialQuantification"),(KindSignatures,"-XKindSignatures"),(EmptyDataDecls,"-XEmptyDataDecls"),(ParallelListComp,"-XParallelListComp"),(TransformListComp,"-XTransformListComp"),(ForeignFunctionInterface,"-XForeignFunctionInterface"),(UnliftedFFITypes,"-XUnliftedFFITypes"),(LiberalTypeSynonyms,"-XLiberalTypeSynonyms"),(Rank2Types,"-XRank2Types"),(RankNTypes,"-XRankNTypes"),(ImpredicativeTypes,"-XImpredicativeTypes"),(TypeOperators,"-XTypeOperators"),(RecursiveDo,"-XRecursiveDo"),(Arrows,"-XArrows"),(UnknownExtension "PArr","-XPArr"),(TemplateHaskell,"-XTemplateHaskell"),(QuasiQuotes,"-XQuasiQuotes"),(Generics,"-XGenerics"),(NoImplicitPrelude,"-XNoImplicitPrelude"),(RecordWildCards,"-XRecordWildCards"),(NamedFieldPuns,"-XNamedFieldPuns"),(RecordPuns,"-XRecordPuns"),(DisambiguateRecordFields,"-XDisambiguateRecordFields"),(OverloadedStrings,"-XOverloadedStrings"),(GADTs,"-XGADTs"),(ViewPatterns,"-XViewPatterns"),(TypeFamilies,"-XTypeFamilies"),(BangPatterns,"-XBangPatterns"),(NoMonomorphismRestriction,"-XNoMonomorphismRestriction"),(NoMonoPatBinds,"-XNoMonoPatBinds"),(RelaxedPolyRec,"-XRelaxedPolyRec"),(ExtendedDefaultRules,"-XExtendedDefaultRules"),(ImplicitParams,"-XImplicitParams"),(ScopedTypeVariables,"-XScopedTypeVariables"),(PatternSignatures,"-XPatternSignatures"),(UnboxedTuples,"-XUnboxedTuples"),(StandaloneDeriving,"-XStandaloneDeriving"),(DeriveDataTypeable,"-XDeriveDataTypeable"),(TypeSynonymInstances,"-XTypeSynonymInstances"),(FlexibleContexts,"-XFlexibleContexts"),(FlexibleInstances,"-XFlexibleInstances"),(ConstrainedClassMethods,"-XConstrainedClassMethods"),(MultiParamTypeClasses,"-XMultiParamTypeClasses"),(FunctionalDependencies,"-XFunctionalDependencies"),(GeneralizedNewtypeDeriving,"-XGeneralizedNewtypeDeriving"),(OverlappingInstances,"-XOverlappingInstances"),(UndecidableInstances,"-XUndecidableInstances"),(IncoherentInstances,"-XIncoherentInstances"),(PackageImports,"-XPackageImports"),(NewQualifiedOperators,"-XNewQualifiedOperators")]}, buildDir = "dist/build", scratchDir = "dist/scratch", packageDeps = [PackageIdentifier {pkgName = PackageName "GLUT", pkgVersion = Version {versionBranch = [2,2,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "OpenGL", pkgVersion = Version {versionBranch = [2,3,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "OpenGLRaw", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "colour", pkgVersion = Version {versionBranch = [2,3,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "data-accessor", pkgVersion = Version {versionBranch = [0,2,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "data-accessor-template", pkgVersion = Version {versionBranch = [0,2,1,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "gd", pkgVersion = Version {versionBranch = [3000,2,0], versionTags = []}}], installedPkgs = PackageIndex (fromList [(PackageName "GLURaw",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "GLURaw", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Sven Panne <sven.panne@aedion.de>", author = "", stability = "", homepage = "http://www.haskell.org/HOpenGL/", pkgUrl = "", description = "GLURaw is a raw Haskell binding for the GLU 1.3 OpenGL utility library. It is\nbasically a 1:1 mapping of GLU's C API, intended as a basis for a nicer\ninterface.\n\nOpenGL is the industry's most widely used and supported 2D and 3D graphics\napplication programming interface (API), incorporating a broad set of\nrendering, texture mapping, special effects, and other powerful visualization\nfunctions. For more information about OpenGL and its various extensions,\nplease see <http://www.opengl.org/>\nand <http://www.opengl.org/registry/>.", category = "Graphics", exposed = True, exposedModules = [ModuleName ["Graphics","Rendering","GLU","Raw"],ModuleName ["Graphics","Rendering","GLU","Raw","Callbacks"],ModuleName ["Graphics","Rendering","GLU","Raw","Functions"],ModuleName ["Graphics","Rendering","GLU","Raw","Tokens"],ModuleName ["Graphics","Rendering","GLU","Raw","Types"]], hiddenModules = [ModuleName ["Graphics","Rendering","GLU","Raw","APIEntry"],ModuleName ["Graphics","Rendering","GLU","Raw","TypesInternal"]], importDirs = ["/home/chris/.cabal/lib/GLURaw-1.1.0.0/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/GLURaw-1.1.0.0/ghc-6.10.4"], hsLibraries = ["HSGLURaw-1.1.0.0"], extraLibraries = ["GLU"], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "OpenGLRaw", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/GLURaw-1.1.0.0/html/GLURaw.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/GLURaw-1.1.0.0/html"]}]),(PackageName "GLUT",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "GLUT", pkgVersion = Version {versionBranch = [2,2,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Sven Panne <sven.panne@aedion.de>", author = "", stability = "", homepage = "http://www.haskell.org/HOpenGL/", pkgUrl = "", description = "A Haskell binding for the OpenGL Utility Toolkit, a window system independent\ntoolkit for writing OpenGL programs. For more information about the C library\non which this binding is based, please see:\n<http://www.opengl.org/resources/libraries/glut/>.", category = "Graphics", exposed = True, exposedModules = [ModuleName ["Graphics","UI","GLUT"],ModuleName ["Graphics","UI","GLUT","Begin"],ModuleName ["Graphics","UI","GLUT","Callbacks"],ModuleName ["Graphics","UI","GLUT","Callbacks","Global"],ModuleName ["Graphics","UI","GLUT","Callbacks","Window"],ModuleName ["Graphics","UI","GLUT","Colormap"],ModuleName ["Graphics","UI","GLUT","Debugging"],ModuleName ["Graphics","UI","GLUT","DeviceControl"],ModuleName ["Graphics","UI","GLUT","Fonts"],ModuleName ["Graphics","UI","GLUT","GameMode"],ModuleName ["Graphics","UI","GLUT","Initialization"],ModuleName ["Graphics","UI","GLUT","Menu"],ModuleName ["Graphics","UI","GLUT","Objects"],ModuleName ["Graphics","UI","GLUT","Overlay"],ModuleName ["Graphics","UI","GLUT","State"],ModuleName ["Graphics","UI","GLUT","Window"]], hiddenModules = [ModuleName ["Graphics","UI","GLUT","Callbacks","Registration"],ModuleName ["Graphics","UI","GLUT","QueryUtils"],ModuleName ["Graphics","UI","GLUT","Raw"],ModuleName ["Graphics","UI","GLUT","Raw","APIEntry"],ModuleName ["Graphics","UI","GLUT","Raw","Callbacks"],ModuleName ["Graphics","UI","GLUT","Raw","Fonts"],ModuleName ["Graphics","UI","GLUT","Raw","Functions"],ModuleName ["Graphics","UI","GLUT","Raw","Tokens"],ModuleName ["Graphics","UI","GLUT","Types"]], importDirs = ["/home/chris/.cabal/lib/GLUT-2.2.1.0/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/GLUT-2.2.1.0/ghc-6.10.4"], hsLibraries = ["HSGLUT-2.2.1.0"], extraLibraries = ["glut"], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "OpenGL", pkgVersion = Version {versionBranch = [2,3,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "StateVar", pkgVersion = Version {versionBranch = [1,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "Tensor", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/GLUT-2.2.1.0/html/GLUT.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/GLUT-2.2.1.0/html"]}]),(PackageName "ObjectName",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "ObjectName", pkgVersion = Version {versionBranch = [1,0,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Sven Panne <sven.panne@aedion.de>", author = "", stability = "", homepage = "http://www.haskell.org/HOpenGL/", pkgUrl = "", description = "This tiny package contains the class ObjectName, which corresponds to the\ngeneral notion of explicitly handled identifiers for API objects, e.g. a\ntexture object name in OpenGL or a buffer object name in OpenAL.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","ObjectName"]], hiddenModules = [], importDirs = ["/home/chris/.cabal/lib/ObjectName-1.0.0.0/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/ObjectName-1.0.0.0/ghc-6.10.4"], hsLibraries = ["HSObjectName-1.0.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/ObjectName-1.0.0.0/html/ObjectName.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/ObjectName-1.0.0.0/html"]}]),(PackageName "OpenGL",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "OpenGL", pkgVersion = Version {versionBranch = [2,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Sven Panne <sven.panne@aedion.de>", author = "", stability = "", homepage = "http://www.haskell.org/HOpenGL/", pkgUrl = "", description = "A Haskell binding for the OpenGL graphics system (GL, version 2.1) and its\naccompanying utility library (GLU, version 1.3).\n\nOpenGL is the industry's most widely used and supported 2D and 3D graphics\napplication programming interface (API), incorporating a broad set of\nrendering, texture mapping, special effects, and other powerful visualization\nfunctions. For more information about OpenGL and its various extensions,\nplease see <http://www.opengl.org/>\nand <http://www.opengl.org/registry/>.", category = "Graphics", exposed = True, exposedModules = [ModuleName ["Graphics","Rendering","OpenGL","GL","Antialiasing"],ModuleName ["Graphics","Rendering","OpenGL","GL","BeginEnd"],ModuleName ["Graphics","Rendering","OpenGL","GL","Bitmaps"],ModuleName ["Graphics","Rendering","OpenGL","GL","BufferObjects"],ModuleName ["Graphics","Rendering","OpenGL","GL","Clipping"],ModuleName ["Graphics","Rendering","OpenGL","GL","Colors"],ModuleName ["Graphics","Rendering","OpenGL","GL","ColorSum"],ModuleName ["Graphics","Rendering","OpenGL","GL","CoordTrans"],ModuleName ["Graphics","Rendering","OpenGL","GL","DisplayLists"],ModuleName ["Graphics","Rendering","OpenGL","GL","Evaluators"],ModuleName ["Graphics","Rendering","OpenGL","GL","Feedback"],ModuleName ["Graphics","Rendering","OpenGL","GL","FlushFinish"],ModuleName ["Graphics","Rendering","OpenGL","GL","Fog"],ModuleName ["Graphics","Rendering","OpenGL","GL","Framebuffer"],ModuleName ["Graphics","Rendering","OpenGL","GL","Hints"],ModuleName ["Graphics","Rendering","OpenGL","GL"],ModuleName ["Graphics","Rendering","OpenGL","GL","LineSegments"],ModuleName ["Graphics","Rendering","OpenGL","GL","PerFragment"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelRectangles","ColorTable"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelRectangles","Convolution"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelRectangles","Histogram"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelRectangles"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelRectangles","Minmax"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelRectangles","PixelMap"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelRectangles","PixelStorage"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelRectangles","PixelTransfer"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelRectangles","Rasterization"],ModuleName ["Graphics","Rendering","OpenGL","GL","Points"],ModuleName ["Graphics","Rendering","OpenGL","GL","Polygons"],ModuleName ["Graphics","Rendering","OpenGL","GL","RasterPos"],ModuleName ["Graphics","Rendering","OpenGL","GL","ReadCopyPixels"],ModuleName ["Graphics","Rendering","OpenGL","GL","Rectangles"],ModuleName ["Graphics","Rendering","OpenGL","GL","SavingState"],ModuleName ["Graphics","Rendering","OpenGL","GL","Selection"],ModuleName ["Graphics","Rendering","OpenGL","GL","Shaders"],ModuleName ["Graphics","Rendering","OpenGL","GL","StringQueries"],ModuleName ["Graphics","Rendering","OpenGL","GL","Texturing","Application"],ModuleName ["Graphics","Rendering","OpenGL","GL","Texturing","Environments"],ModuleName ["Graphics","Rendering","OpenGL","GL","Texturing"],ModuleName ["Graphics","Rendering","OpenGL","GL","Texturing","Objects"],ModuleName ["Graphics","Rendering","OpenGL","GL","Texturing","Parameters"],ModuleName ["Graphics","Rendering","OpenGL","GL","Texturing","Queries"],ModuleName ["Graphics","Rendering","OpenGL","GL","Texturing","Specification"],ModuleName ["Graphics","Rendering","OpenGL","GLU","Errors"],ModuleName ["Graphics","Rendering","OpenGL","GLU"],ModuleName ["Graphics","Rendering","OpenGL","GLU","Initialization"],ModuleName ["Graphics","Rendering","OpenGL","GLU","Matrix"],ModuleName ["Graphics","Rendering","OpenGL","GLU","Mipmapping"],ModuleName ["Graphics","Rendering","OpenGL","GLU","NURBS"],ModuleName ["Graphics","Rendering","OpenGL","GLU","Quadrics"],ModuleName ["Graphics","Rendering","OpenGL","GLU","Tessellation"],ModuleName ["Graphics","Rendering","OpenGL","GL","VertexArrays"],ModuleName ["Graphics","Rendering","OpenGL","GL","VertexSpec"],ModuleName ["Graphics","Rendering","OpenGL"]], hiddenModules = [ModuleName ["Graphics","Rendering","OpenGL","GL","BlendingFactor"],ModuleName ["Graphics","Rendering","OpenGL","GL","BufferMode"],ModuleName ["Graphics","Rendering","OpenGL","GL","Capability"],ModuleName ["Graphics","Rendering","OpenGL","GL","ComparisonFunction"],ModuleName ["Graphics","Rendering","OpenGL","GL","ControlPoint"],ModuleName ["Graphics","Rendering","OpenGL","GL","DataType"],ModuleName ["Graphics","Rendering","OpenGL","GL","Domain"],ModuleName ["Graphics","Rendering","OpenGL","GL","EdgeFlag"],ModuleName ["Graphics","Rendering","OpenGL","GL","Exception"],ModuleName ["Graphics","Rendering","OpenGL","GL","Face"],ModuleName ["Graphics","Rendering","OpenGL","GL","GLboolean"],ModuleName ["Graphics","Rendering","OpenGL","GL","IOState"],ModuleName ["Graphics","Rendering","OpenGL","GL","PeekPoke"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelData"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelFormat"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelRectangles","Reset"],ModuleName ["Graphics","Rendering","OpenGL","GL","PixelRectangles","Sink"],ModuleName ["Graphics","Rendering","OpenGL","GL","PointParameter"],ModuleName ["Graphics","Rendering","OpenGL","GL","PolygonMode"],ModuleName ["Graphics","Rendering","OpenGL","GL","PrimitiveMode"],ModuleName ["Graphics","Rendering","OpenGL","GL","QueryUtils"],ModuleName ["Graphics","Rendering","OpenGL","GL","RenderMode"],ModuleName ["Graphics","Rendering","OpenGL","GL","Texturing","PixelInternalFormat"],ModuleName ["Graphics","Rendering","OpenGL","GL","Texturing","TexParameter"],ModuleName ["Graphics","Rendering","OpenGL","GL","Texturing","TextureTarget"],ModuleName ["Graphics","Rendering","OpenGL","GL","Texturing","TextureUnit"],ModuleName ["Graphics","Rendering","OpenGL","GL","VertexAttributes"],ModuleName ["Graphics","Rendering","OpenGL","GLU","ErrorsInternal"]], importDirs = ["/home/chris/.cabal/lib/OpenGL-2.3.0.0/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/OpenGL-2.3.0.0/ghc-6.10.4"], hsLibraries = ["HSOpenGL-2.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "GLURaw", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "ObjectName", pkgVersion = Version {versionBranch = [1,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "OpenGLRaw", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "StateVar", pkgVersion = Version {versionBranch = [1,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "Tensor", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/OpenGL-2.3.0.0/html/OpenGL.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/OpenGL-2.3.0.0/html"]}]),(PackageName "OpenGLRaw",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "OpenGLRaw", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Sven Panne <sven.panne@aedion.de>", author = "", stability = "", homepage = "http://www.haskell.org/HOpenGL/", pkgUrl = "", description = "OpenGLRaw is a raw Haskell binding for the OpenGL 3.1 graphics system and\nlots of OpenGL extensions. It is basically a 1:1 mapping of OpenGL's C API,\nintended as a basis for a nicer interface. OpenGLRaw offers access to all\nnecessary functions, tokens and types plus a general facility for loading\nextension entries. The module hierarchy closely mirrors the naming structure\nof the OpenGL extensions, making it easy to find the right module to import.\nAll API entries are loaded dynamically, so no special C header files are\nneeded for building this package. If an API entry is not found at runtime, a\nuserError is thrown.\n\nOpenGL is the industry's most widely used and supported 2D and 3D graphics\napplication programming interface (API), incorporating a broad set of\nrendering, texture mapping, special effects, and other powerful visualization\nfunctions. For more information about OpenGL and its various extensions,\nplease see <http://www.opengl.org/>\nand <http://www.opengl.org/registry/>.", category = "Graphics", exposed = True, exposedModules = [ModuleName ["Graphics","Rendering","OpenGL","Raw"],ModuleName ["Graphics","Rendering","OpenGL","Raw","ARB"],ModuleName ["Graphics","Rendering","OpenGL","Raw","ARB","Compatibility"],ModuleName ["Graphics","Rendering","OpenGL","Raw","ARB","FragmentProgram"],ModuleName ["Graphics","Rendering","OpenGL","Raw","ARB","GeometryShader4"],ModuleName ["Graphics","Rendering","OpenGL","Raw","ARB","InstancedArrays"],ModuleName ["Graphics","Rendering","OpenGL","Raw","ARB","MatrixPalette"],ModuleName ["Graphics","Rendering","OpenGL","Raw","ARB","ShadowAmbient"],ModuleName ["Graphics","Rendering","OpenGL","Raw","ARB","VertexBlend"],ModuleName ["Graphics","Rendering","OpenGL","Raw","ARB","VertexProgram"],ModuleName ["Graphics","Rendering","OpenGL","Raw","Core31"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","Abgr"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","BindableUniform"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","ClipVolumeHint"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","Cmyka"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","ColorSubtable"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","CompiledVertexArray"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","CoordinateFrame"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","CullVertex"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","DepthBoundsTest"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","DirectStateAccess"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","FogCoord"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","FourTwoTwoPixels"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","FragmentLighting"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","FramebufferObject"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","FramebufferSRGB"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","GeometryShader4"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","GpuProgramParameters"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","IndexArrayFormats"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","IndexFunc"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","IndexMaterial"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","LightTexture"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","Multisample"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","PackedFloat"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","PalettedTexture"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","PerturbNormal"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","PixelTransform"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","PointParameters"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","PolygonOffset"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","ProvokingVertex"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","RescaleNormal"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","SecondaryColor"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","SeparateSpecularColor"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","SharedTexturePalette"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","StencilClearTag"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","StencilTwoSide"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","Texture"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureCompressionDxt1"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureCompressionLatc"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureCompressionS3tc"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureEnvAdd"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureEnvCombine"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureEnvDot3"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureFilterAnisotropic"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureInteger"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureLodBias"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureMirrorClamp"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureObject"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureSRGB"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TextureSwizzle"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","TimerQuery"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","VertexArray"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","VertexShader"],ModuleName ["Graphics","Rendering","OpenGL","Raw","EXT","VertexWeighting"],ModuleName ["Graphics","Rendering","OpenGL","Raw","GetProcAddress"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","CopyDepthToColor"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","DepthClamp"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","Fence"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","FogDistance"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","LightMaxExponent"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","MultisampleFilterHint"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","OcclusionQuery"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","PrimitiveRestart"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","RegisterCombiners"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","RegisterCombiners2"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","TexgenEmboss"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","TextureCompressionVtc"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","TextureEnvCombine4"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","TextureShader"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","TextureShader2"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","VertexArrayRange"],ModuleName ["Graphics","Rendering","OpenGL","Raw","NV","VertexArrayRange2"]], hiddenModules = [ModuleName ["Graphics","Rendering","OpenGL","Raw","ARB","Compatibility","Functions"],ModuleName ["Graphics","Rendering","OpenGL","Raw","ARB","Compatibility","Tokens"],ModuleName ["Graphics","Rendering","OpenGL","Raw","Core31","Functions"],ModuleName ["Graphics","Rendering","OpenGL","Raw","Core31","Tokens"],ModuleName ["Graphics","Rendering","OpenGL","Raw","Core31","Types"],ModuleName ["Graphics","Rendering","OpenGL","Raw","Extensions"]], importDirs = ["/home/chris/.cabal/lib/OpenGLRaw-1.0.1.0/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/OpenGLRaw-1.0.1.0/ghc-6.10.4"], hsLibraries = ["HSOpenGLRaw-1.0.1.0"], extraLibraries = ["GL"], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/OpenGLRaw-1.0.1.0/html/OpenGLRaw.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/OpenGLRaw-1.0.1.0/html"]}]),(PackageName "StateVar",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "StateVar", pkgVersion = Version {versionBranch = [1,0,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Sven Panne <sven.panne@aedion.de>", author = "", stability = "", homepage = "http://www.haskell.org/HOpenGL/", pkgUrl = "", description = "This package contains state variables, which are references in the IO monad,\nlike IORefs or parts of the OpenGL state.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","StateVar"]], hiddenModules = [], importDirs = ["/home/chris/.cabal/lib/StateVar-1.0.0.0/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/StateVar-1.0.0.0/ghc-6.10.4"], hsLibraries = ["HSStateVar-1.0.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/StateVar-1.0.0.0/html/StateVar.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/StateVar-1.0.0.0/html"]}]),(PackageName "Tensor",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "Tensor", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Sven Panne <sven.panne@aedion.de>", author = "", stability = "", homepage = "http://www.haskell.org/HOpenGL/", pkgUrl = "", description = "This package contains tensor data types and their instances for some basic\ntype classes.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Tensor"]], hiddenModules = [], importDirs = ["/home/chris/.cabal/lib/Tensor-1.0.0.1/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/Tensor-1.0.0.1/ghc-6.10.4"], hsLibraries = ["HSTensor-1.0.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/Tensor-1.0.0.1/html/Tensor.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/Tensor-1.0.0.1/html"]}]),(PackageName "array",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package defines the classes @IArray@ of immutable arrays and\n@MArray@ of arrays mutable within appropriate monads, as well as\nsome instances of these classes.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Array","Base"],ModuleName ["Data","Array","Diff"],ModuleName ["Data","Array","IArray"],ModuleName ["Data","Array","IO"],ModuleName ["Data","Array","IO","Internals"],ModuleName ["Data","Array","MArray"],ModuleName ["Data","Array","ST"],ModuleName ["Data","Array","Storable"],ModuleName ["Data","Array","Unboxed"],ModuleName ["Data","Array"]], hiddenModules = [], importDirs = ["/home/chris/.cabal/lib/array-0.2.0.0/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/array-0.2.0.0/ghc-6.10.4"], hsLibraries = ["HSarray-0.2.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/array-0.2.0.0/html/array.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/array-0.2.0.0/html"]}]),(PackageName "base",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This is a backwards-compatible version of the base package.\nIt depends on a later version of base, and was probably supplied\nwith your compiler when it was installed.", category = "", exposed = True, exposedModules = [ModuleName ["Data","Generics"],ModuleName ["Data","Generics","Aliases"],ModuleName ["Data","Generics","Basics"],ModuleName ["Data","Generics","Instances"],ModuleName ["Data","Generics","Schemes"],ModuleName ["Data","Generics","Text"],ModuleName ["Data","Generics","Twins"],ModuleName ["Foreign","Concurrent"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Conc"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Dotnet"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Float"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","Handle"],ModuleName ["GHC","IO"],ModuleName ["GHC","IOBase"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","STRef"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Storable"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["System","Timeout"],ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Concurrent","SampleVar"],ModuleName ["Control","Exception"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Complex"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","HashTable"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","Ord"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Typeable"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","CPUTime"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"]], hiddenModules = [], importDirs = ["/usr/lib/ghc-6.10.4/base-3.0.3.1"], libraryDirs = ["/usr/lib/ghc-6.10.4/base-3.0.3.1"], hsLibraries = ["HSbase-3.0.3.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc6-doc/libraries/base/base.haddock"], haddockHTMLs = ["/usr/share/doc/ghc6-doc/libraries/base"]},InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains the Prelude and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "", exposed = True, exposedModules = [ModuleName ["Foreign","Concurrent"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Classes"],ModuleName ["GHC","Conc"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Float"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","Handle"],ModuleName ["GHC","IO"],ModuleName ["GHC","IOBase"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","STRef"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Storable"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["System","Timeout"],ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Concurrent","SampleVar"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","OldException"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Complex"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Data"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","HashTable"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","Ord"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Typeable"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","CPUTime"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"]], hiddenModules = [], importDirs = ["/usr/lib/ghc-6.10.4/base-4.1.0.0"], libraryDirs = ["/usr/lib/ghc-6.10.4/base-4.1.0.0"], hsLibraries = ["HSbase-4.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/lib/ghc-6.10.4/base-4.1.0.0/include"], includes = ["HsBase.h"], depends = [PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "integer", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc6-doc/libraries/base/base.haddock"], haddockHTMLs = ["/usr/share/doc/ghc6-doc/libraries/base"]}]),(PackageName "colour",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "colour", pkgVersion = Version {versionBranch = [2,3,1], versionTags = []}}, license = OtherLicense, copyright = "", maintainer = "Russell O'Connor <roconnor@theorem.ca>", author = "Russell O'Connor", stability = "", homepage = "http://www.haskell.org/haskellwiki/Colour", pkgUrl = "", description = "This package provides a data type for colours and transparency.\nColours can be blended and composed.\nVarious colour spaces are supported.\nA module of colour names (\"Data.Colour.Names\") is provided.", category = "data, graphics", exposed = True, exposedModules = [ModuleName ["Data","Colour"],ModuleName ["Data","Colour","SRGB"],ModuleName ["Data","Colour","SRGB","Linear"],ModuleName ["Data","Colour","CIE"],ModuleName ["Data","Colour","CIE","Illuminant"],ModuleName ["Data","Colour","RGBSpace"],ModuleName ["Data","Colour","RGBSpace","HSL"],ModuleName ["Data","Colour","RGBSpace","HSV"],ModuleName ["Data","Colour","Names"]], hiddenModules = [ModuleName ["Data","Colour","Internal"],ModuleName ["Data","Colour","Chan"],ModuleName ["Data","Colour","RGB"],ModuleName ["Data","Colour","Matrix"],ModuleName ["Data","Colour","CIE","Chromaticity"]], importDirs = ["/home/chris/.cabal/lib/colour-2.3.1/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/colour-2.3.1/ghc-6.10.4"], hsLibraries = ["HScolour-2.3.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/colour-2.3.1/html/colour.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/colour-2.3.1/html"]}]),(PackageName "containers",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains efficient general-purpose implementations\nof various basic immutable container types.  The declared cost of\neach operation is either worst-case or amortized, but remains\nvalid even if structures are shared.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Graph"],ModuleName ["Data","IntMap"],ModuleName ["Data","IntSet"],ModuleName ["Data","Map"],ModuleName ["Data","Sequence"],ModuleName ["Data","Set"],ModuleName ["Data","Tree"]], hiddenModules = [], importDirs = ["/usr/lib/ghc-6.10.4/containers-0.2.0.1"], libraryDirs = ["/usr/lib/ghc-6.10.4/containers-0.2.0.1"], hsLibraries = ["HScontainers-0.2.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc6-doc/libraries/containers/containers.haddock"], haddockHTMLs = ["/usr/share/doc/ghc6-doc/libraries/containers"]}]),(PackageName "data-accessor",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "data-accessor", pkgVersion = Version {versionBranch = [0,2,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Henning Thielemann <haskell@henning-thielemann.de>", author = "Henning Thielemann <haskell@henning-thielemann.de>, Luke Palmer <lrpalmer@gmail.com>", stability = "", homepage = "http://www.haskell.org/haskellwiki/Record_access", pkgUrl = "http://code.haskell.org/data-accessor/", description = "In Haskell 98 the name of a record field\nis automatically also the name of a function which gets the value\nof the according field.\nE.g. if we have\n\ndata Pair a b = Pair\nfirst :: a, second :: b\n\nthen\n\n> first  :: Pair a b -> a\n> second :: Pair a b -> b\n\nHowever for setting or modifying a field value\nwe need to use some syntactic sugar, which is often clumsy.\n\nmodifyFirst :: (a -> a) -> (Pair a b -> Pair a b)\nmodifyFirst f r\\@(Pair\nfirst=a\n) = r\nfirst = f a\n\nWith this package you can define record field accessors\nwhich allow setting, getting and modifying values easily.\nThe package clearly demonstrates the power of the functional approach:\nYou can combine accessors of a record and sub-records,\nto make the access look like the fields of the sub-record belong to the main record.\n\nExample:\n\n> *Data.Accessor.Example> (first^:second^=10) (('b',7),\"hallo\")\n> (('b',10),\"hallo\")\n\nYou can easily manipulate record fields in a 'Control.Monad.State.State' monad,\nyou can easily code 'Show' instances that use the Accessor syntax\nand you can parse binary streams into records.\nSee @Data.Accessor.Example@ for demonstration of all features.\n\nIt would be great if in revised Haskell versions the names of record fields\nare automatically 'Data.Accessor.Accessor's\nrather than plain @get@ functions.\nFor now, the package @data-accessor-template@ provides Template Haskell functions\nfor automated generation of 'Data.Acesssor.Accessor's.\n\nFor similar packages see @lenses@ and @fclabel@.\nA related concept are editors\n<http://conal.net/blog/posts/semantic-editor-combinators/>.\nEditors only consist of a modify method\n(and @modify@ applied to a 'const' function is a @set@ function).\nThis way, they can modify all function values of a function at once,\nwhereas an accessor can only change a single function value,\nsay, it can change @f 0 = 1@ to @f 0 = 2@.\nThis way, editors can even change the type of a record or a function.\nAn Arrow instance can be define for editors,\nbut for accessors only a Category instance is possible ('(.)' method).\nThe reason is the @arr@ method of the @Arrow@ class,\nthat conflicts with the two-way nature (set and get) of accessors.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Accessor"],ModuleName ["Data","Accessor","Basic"],ModuleName ["Data","Accessor","Container"],ModuleName ["Data","Accessor","Show"],ModuleName ["Data","Accessor","Tuple"],ModuleName ["Data","Accessor","BinaryRead"],ModuleName ["Data","Accessor","MonadState"]], hiddenModules = [ModuleName ["Data","Accessor","Example"],ModuleName ["Data","Accessor","Private"]], importDirs = ["/home/chris/.cabal/lib/data-accessor-0.2.1/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/data-accessor-0.2.1/ghc-6.10.4"], hsLibraries = ["HSdata-accessor-0.2.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "transformers", pkgVersion = Version {versionBranch = [0,1,4,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/data-accessor-0.2.1/html/data-accessor.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/data-accessor-0.2.1/html"]}]),(PackageName "data-accessor-template",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "data-accessor-template", pkgVersion = Version {versionBranch = [0,2,1,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Henning Thielemann <haskell@henning-thielemann.de>", author = "Luke Palmer <lrpalmer@gmail.com>, Henning Thielemann <haskell@henning-thielemann.de>", stability = "", homepage = "http://www.haskell.org/haskellwiki/Record_access", pkgUrl = "http://code.haskell.org/data-accessor/", description = "Automate generation of @Accessor@'s of the @data-accessor@ package\nby Template Haskell functions.", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Accessor","Template"]], hiddenModules = [], importDirs = ["/home/chris/.cabal/lib/data-accessor-template-0.2.1.2/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/data-accessor-template-0.2.1.2/ghc-6.10.4"], hsLibraries = ["HSdata-accessor-template-0.2.1.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "data-accessor", pkgVersion = Version {versionBranch = [0,2,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "template-haskell", pkgVersion = Version {versionBranch = [2,3,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "utility-ht", pkgVersion = Version {versionBranch = [0,0,5,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/data-accessor-template-0.2.1.2/html/data-accessor-template.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/data-accessor-template-0.2.1.2/html"]}]),(PackageName "gd",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "gd", pkgVersion = Version {versionBranch = [3000,2,0], versionTags = []}}, license = BSD3, copyright = "Bjorn Bringert", maintainer = "bjorn@bringert.net", author = "Bjorn Bringert", stability = "", homepage = "", pkgUrl = "", description = "This is a binding to a (currently very small) subset of\nthe GD graphics library.", category = "", exposed = True, exposedModules = [ModuleName ["Graphics","GD"]], hiddenModules = [], importDirs = ["/home/chris/.cabal/lib/gd-3000.2.0/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/gd-3000.2.0/ghc-6.10.4"], hsLibraries = ["HSgd-3000.2.0"], extraLibraries = ["gd","jpeg","m","png"], extraGHCiLibraries = [], includeDirs = ["/home/chris/.cabal/lib/gd-3000.2.0/ghc-6.10.4/include"], includes = ["gd.h"], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/gd-3000.2.0/html/gd.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/gd-3000.2.0/html"]}]),(PackageName "ghc-prim",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "GHC primitives.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Prim"],ModuleName ["GHC","Bool"],ModuleName ["GHC","Generics"],ModuleName ["GHC","Ordering"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","IntWord32"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"],ModuleName ["GHC","Unit"]], hiddenModules = [], importDirs = ["/usr/lib/ghc-6.10.4/ghc-prim-0.1.0.0"], libraryDirs = ["/usr/lib/ghc-6.10.4/ghc-prim-0.1.0.0"], hsLibraries = ["HSghc-prim-0.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc6-doc/libraries/ghc-prim/ghc-prim.haddock"], haddockHTMLs = ["/usr/share/doc/ghc6-doc/libraries/ghc-prim"]}]),(PackageName "integer",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "integer", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains an Integer library based on GMP.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","Internals"]], hiddenModules = [], importDirs = ["/usr/lib/ghc-6.10.4/integer-0.1.0.1"], libraryDirs = ["/usr/lib/ghc-6.10.4/integer-0.1.0.1"], hsLibraries = ["HSinteger-0.1.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc6-doc/libraries/integer/integer.haddock"], haddockHTMLs = ["/usr/share/doc/ghc6-doc/libraries/integer"]}]),(PackageName "packedstring",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "packedstring", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "(Deprecated) Packed Strings.", category = "", exposed = True, exposedModules = [ModuleName ["Data","PackedString"]], hiddenModules = [], importDirs = ["/usr/lib/ghc-6.10.4/packedstring-0.1.0.1"], libraryDirs = ["/usr/lib/ghc-6.10.4/packedstring-0.1.0.1"], hsLibraries = ["HSpackedstring-0.1.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc6-doc/libraries/packedstring/packedstring.haddock"], haddockHTMLs = ["/usr/share/doc/ghc6-doc/libraries/packedstring"]}]),(PackageName "pretty",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "pretty", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains John Hughes's pretty-printing library,\nheavily modified by Simon Peyton Jones.", category = "Text", exposed = True, exposedModules = [ModuleName ["Text","PrettyPrint"],ModuleName ["Text","PrettyPrint","HughesPJ"]], hiddenModules = [], importDirs = ["/usr/lib/ghc-6.10.4/pretty-1.0.1.0"], libraryDirs = ["/usr/lib/ghc-6.10.4/pretty-1.0.1.0"], hsLibraries = ["HSpretty-1.0.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc6-doc/libraries/pretty/pretty.haddock"], haddockHTMLs = ["/usr/share/doc/ghc6-doc/libraries/pretty"]}]),(PackageName "rts",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], importDirs = [], libraryDirs = ["/usr/lib/ghc-6.10.4"], hsLibraries = ["HSrts"], extraLibraries = ["m","ffi","gmp","dl","rt"], extraGHCiLibraries = [], includeDirs = ["/usr/lib/ghc-6.10.4/include"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-u","ghczmprim_GHCziTypes_Izh_static_info","-u","ghczmprim_GHCziTypes_Czh_static_info","-u","ghczmprim_GHCziTypes_Fzh_static_info","-u","ghczmprim_GHCziTypes_Dzh_static_info","-u","base_GHCziPtr_Ptr_static_info","-u","base_GHCziWord_Wzh_static_info","-u","base_GHCziInt_I8zh_static_info","-u","base_GHCziInt_I16zh_static_info","-u","base_GHCziInt_I32zh_static_info","-u","base_GHCziInt_I64zh_static_info","-u","base_GHCziWord_W8zh_static_info","-u","base_GHCziWord_W16zh_static_info","-u","base_GHCziWord_W32zh_static_info","-u","base_GHCziWord_W64zh_static_info","-u","base_GHCziStable_StablePtr_static_info","-u","ghczmprim_GHCziTypes_Izh_con_info","-u","ghczmprim_GHCziTypes_Czh_con_info","-u","ghczmprim_GHCziTypes_Fzh_con_info","-u","ghczmprim_GHCziTypes_Dzh_con_info","-u","base_GHCziPtr_Ptr_con_info","-u","base_GHCziPtr_FunPtr_con_info","-u","base_GHCziStable_StablePtr_con_info","-u","ghczmprim_GHCziBool_False_closure","-u","ghczmprim_GHCziBool_True_closure","-u","base_GHCziPack_unpackCString_closure","-u","base_GHCziIOBase_stackOverflow_closure","-u","base_GHCziIOBase_heapOverflow_closure","-u","base_ControlziExceptionziBase_nonTermination_closure","-u","base_GHCziIOBase_blockedOnDeadMVar_closure","-u","base_GHCziIOBase_blockedIndefinitely_closure","-u","base_ControlziExceptionziBase_nestedAtomically_closure","-u","base_GHCziWeak_runFinalizzerBatch_closure","-u","base_GHCziTopHandler_runIO_closure","-u","base_GHCziTopHandler_runNonIO_closure","-u","base_GHCziConc_runHandlers_closure","-u","base_GHCziConc_ensureIOManagerIsRunning_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}]),(PackageName "syb",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains the generics system described in the\n/Scrap Your Boilerplate/ papers (see <http://www.cs.vu.nl/boilerplate/>).\nIt defines the @Data@ class of types permitting folding and unfolding\nof constructor applications, instances of this class for primitive\ntypes, and a variety of traversals.", category = "", exposed = True, exposedModules = [ModuleName ["Data","Generics"],ModuleName ["Data","Generics","Aliases"],ModuleName ["Data","Generics","Basics"],ModuleName ["Data","Generics","Instances"],ModuleName ["Data","Generics","Schemes"],ModuleName ["Data","Generics","Text"],ModuleName ["Data","Generics","Twins"]], hiddenModules = [], importDirs = ["/usr/lib/ghc-6.10.4/syb-0.1.0.1"], libraryDirs = ["/usr/lib/ghc-6.10.4/syb-0.1.0.1"], hsLibraries = ["HSsyb-0.1.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc6-doc/libraries/syb/syb.haddock"], haddockHTMLs = ["/usr/share/doc/ghc6-doc/libraries/syb"]}]),(PackageName "template-haskell",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "template-haskell", pkgVersion = Version {versionBranch = [2,3,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "Facilities for manipulating Haskell source code using Template Haskell.", category = "", exposed = True, exposedModules = [ModuleName ["Language","Haskell","TH","Syntax"],ModuleName ["Language","Haskell","TH","PprLib"],ModuleName ["Language","Haskell","TH","Ppr"],ModuleName ["Language","Haskell","TH","Lib"],ModuleName ["Language","Haskell","TH","Quote"],ModuleName ["Language","Haskell","TH"]], hiddenModules = [], importDirs = ["/usr/lib/ghc-6.10.4/template-haskell-2.3.0.1"], libraryDirs = ["/usr/lib/ghc-6.10.4/template-haskell-2.3.0.1"], hsLibraries = ["HStemplate-haskell-2.3.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "packedstring", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "pretty", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/share/doc/ghc6-doc/libraries/template-haskell/template-haskell.haddock"], haddockHTMLs = ["/usr/share/doc/ghc6-doc/libraries/template-haskell"]}]),(PackageName "transformers",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "transformers", pkgVersion = Version {versionBranch = [0,1,4,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Ross Paterson <ross@soi.city.ac.uk>", author = "Andy Gill", stability = "", homepage = "", pkgUrl = "", description = "Haskell 98 part of a monad transformer library, inspired by the paper\n\\\"Functional Programming with Overloading and Higher-Order Polymorphism\\\",\nby Mark P Jones, in /Advanced School of Functional Programming/, 1995\n(<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>).\n\nThis part contains the monad transformer class, the concrete monad\ntransformers, operations and liftings.  It can be used on its own\nin Haskell 98 code, or with the monad classes in the @monads-fd@ or\n@monads-tf@ packages, which automatically lift operations introduced\nby monad transformers through other transformers.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","Identity"],ModuleName ["Control","Monad","Trans"],ModuleName ["Control","Monad","Trans","Cont"],ModuleName ["Control","Monad","Trans","Error"],ModuleName ["Control","Monad","Trans","Identity"],ModuleName ["Control","Monad","Trans","List"],ModuleName ["Control","Monad","Trans","Maybe"],ModuleName ["Control","Monad","Trans","Reader"],ModuleName ["Control","Monad","Trans","RWS"],ModuleName ["Control","Monad","Trans","RWS","Lazy"],ModuleName ["Control","Monad","Trans","RWS","Strict"],ModuleName ["Control","Monad","Trans","State"],ModuleName ["Control","Monad","Trans","State","Lazy"],ModuleName ["Control","Monad","Trans","State","Strict"],ModuleName ["Control","Monad","Trans","Writer"],ModuleName ["Control","Monad","Trans","Writer","Lazy"],ModuleName ["Control","Monad","Trans","Writer","Strict"]], hiddenModules = [], importDirs = ["/home/chris/.cabal/lib/transformers-0.1.4.0/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/transformers-0.1.4.0/ghc-6.10.4"], hsLibraries = ["HStransformers-0.1.4.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/transformers-0.1.4.0/html/transformers.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/transformers-0.1.4.0/html"]}]),(PackageName "utility-ht",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "utility-ht", pkgVersion = Version {versionBranch = [0,0,5,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Henning Thielemann <haskell@henning-thielemann.de>", author = "Henning Thielemann <haskell@henning-thielemann.de>", stability = "", homepage = "", pkgUrl = "", description = "Various small helper functions for Lists, Maybes, Tuples, Functions.\nSome of these functions are improved implementations of standard functions.\nThey have the same name as their standard counterparts.\nThe package only contains functions\nthat do not require packages other than the base package.\nThus you do not risk a dependency avalanche by importing it.\nHowever, further splitting the base package might invalidate this statement.", category = "Data, List", exposed = True, exposedModules = [ModuleName ["Data","Bool","HT"],ModuleName ["Data","Eq","HT"],ModuleName ["Data","Function","HT"],ModuleName ["Data","List","HT"],ModuleName ["Data","List","Key"],ModuleName ["Data","List","Match"],ModuleName ["Data","Maybe","HT"],ModuleName ["Data","Ord","HT"],ModuleName ["Data","Record","HT"],ModuleName ["Data","String","HT"],ModuleName ["Data","Tuple","HT"],ModuleName ["Control","Monad","HT"],ModuleName ["Data","Strictness","HT"],ModuleName ["Text","Read","HT"],ModuleName ["Text","Show","HT"]], hiddenModules = [ModuleName ["Data","Bool","HT","Private"],ModuleName ["Data","List","HT","Private"],ModuleName ["Data","List","Key","Private"],ModuleName ["Data","List","Match","Private"],ModuleName ["Data","Function","HT","Private"],ModuleName ["Data","Record","HT","Private"]], importDirs = ["/home/chris/.cabal/lib/utility-ht-0.0.5.1/ghc-6.10.4"], libraryDirs = ["/home/chris/.cabal/lib/utility-ht-0.0.5.1/ghc-6.10.4"], hsLibraries = ["HSutility-ht-0.0.5.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/chris/.cabal/share/doc/utility-ht-0.0.5.1/html/utility-ht.haddock"], haddockHTMLs = ["/home/chris/.cabal/share/doc/utility-ht-0.0.5.1/html"]}])]), pkgDescrFile = Just "./hfractal.cabal", localPkgDescr = PackageDescription {package = PackageIdentifier {pkgName = PackageName "hfractal", pkgVersion = Version {versionBranch = [0,3,2,1], versionTags = []}}, license = BSD3, licenseFile = "", copyright = "2009-2009 Chris Holdsworth", maintainer = "Chris Holdsworth <chrisholdsworth@gmail.com>", author = "Chris Holdsworth <chrisholdsworth@gmail.com>", stability = "Experimental", testedWith = [], homepage = "", pkgUrl = "", bugReports = "", sourceRepos = [], synopsis = "OpenGL fractal renderer", description = "An OpenGL fractal browser with multicore support and the capability to output high quality png images.", category = "Graphics", customFieldsPD = [], buildDepends = [Dependency (PackageName "GLUT") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [2,2,1,0], versionTags = []})) (LaterVersion (Version {versionBranch = [2,2,1,0], versionTags = []}))) (EarlierVersion (Version {versionBranch = [2,2,2,0], versionTags = []}))) (ThisVersion (Version {versionBranch = [2,2,1,0], versionTags = []}))),Dependency (PackageName "OpenGL") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [2,3], versionTags = []})) (LaterVersion (Version {versionBranch = [2,3], versionTags = []}))) (EarlierVersion (Version {versionBranch = [2,4,0,0], versionTags = []}))) (ThisVersion (Version {versionBranch = [2,3,0,0], versionTags = []}))),Dependency (PackageName "OpenGLRaw") (IntersectVersionRanges (EarlierVersion (Version {versionBranch = [1,1,0,0], versionTags = []})) (ThisVersion (Version {versionBranch = [1,0,1,0], versionTags = []}))),Dependency (PackageName "array") (IntersectVersionRanges AnyVersion (ThisVersion (Version {versionBranch = [0,2,0,0], versionTags = []}))),Dependency (PackageName "base") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [3], versionTags = []})) (LaterVersion (Version {versionBranch = [3], versionTags = []}))) (EarlierVersion (Version {versionBranch = [5], versionTags = []}))) (ThisVersion (Version {versionBranch = [3,0,3,1], versionTags = []}))),Dependency (PackageName "colour") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [2,3,1], versionTags = []})) (LaterVersion (Version {versionBranch = [2,3,1], versionTags = []}))) (ThisVersion (Version {versionBranch = [2,3,1], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,2,0,1], versionTags = []}))),Dependency (PackageName "data-accessor") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2], versionTags = []}))) (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,3], versionTags = []})) (EarlierVersion (Version {versionBranch = [0,3], versionTags = []})))) (ThisVersion (Version {versionBranch = [0,2,1], versionTags = []}))),Dependency (PackageName "data-accessor-template") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2], versionTags = []}))) (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,3], versionTags = []})) (EarlierVersion (Version {versionBranch = [0,3], versionTags = []})))) (ThisVersion (Version {versionBranch = [0,2,1,2], versionTags = []}))),Dependency (PackageName "gd") (IntersectVersionRanges (IntersectVersionRanges (EarlierVersion (Version {versionBranch = [3000,3,0], versionTags = []})) (UnionVersionRanges (ThisVersion (Version {versionBranch = [3000,2,0], versionTags = []})) (LaterVersion (Version {versionBranch = [3000,2,0], versionTags = []})))) (ThisVersion (Version {versionBranch = [3000,2,0], versionTags = []})))], descCabalVersion = UnionVersionRanges (ThisVersion (Version {versionBranch = [1,2], versionTags = []})) (LaterVersion (Version {versionBranch = [1,2], versionTags = []})), buildType = Just Simple, library = Nothing, executables = [Executable {exeName = "hfractal", modulePath = "Hfractal.hs", buildInfo = BuildInfo {buildable = True, buildTools = [], cppOptions = [], ccOptions = [], ldOptions = [], pkgconfigDepends = [], frameworks = [], cSources = [], hsSourceDirs = ["."], otherModules = [ModuleName ["FracComp"],ModuleName ["FracColour"],ModuleName ["FracImg"],ModuleName ["FracState"],ModuleName ["Bindings"]], extensions = [], extraLibs = [], extraLibDirs = [], includeDirs = [], includes = [], installIncludes = [], options = [(GHC,["-O2","-threaded","-fvia-C","-optc-O3","-optc-ffast-math"])], ghcProfOptions = [], ghcSharedOptions = [], customFieldsBI = []}}], dataFiles = [], dataDir = "", extraSrcFiles = ["README"], extraTmpFiles = []}, withPrograms = [("alex",ConfiguredProgram {programId = "alex", programVersion = Just (Version {versionBranch = [2,3,1], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/alex"}}),("ar",ConfiguredProgram {programId = "ar", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/ar"}}),("cpphs",ConfiguredProgram {programId = "cpphs", programVersion = Just (Version {versionBranch = [1,7], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/home/chris/.cabal/bin/cpphs"}}),("ffihugs",ConfiguredProgram {programId = "ffihugs", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/ffihugs"}}),("gcc",ConfiguredProgram {programId = "gcc", programVersion = Just (Version {versionBranch = [4,3,3], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/gcc"}}),("ghc",ConfiguredProgram {programId = "ghc", programVersion = Just (Version {versionBranch = [6,10,4], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/ghc"}}),("ghc-pkg",ConfiguredProgram {programId = "ghc-pkg", programVersion = Just (Version {versionBranch = [6,10,4], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/ghc-pkg"}}),("haddock",ConfiguredProgram {programId = "haddock", programVersion = Just (Version {versionBranch = [2,4,2], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/haddock"}}),("happy",ConfiguredProgram {programId = "happy", programVersion = Just (Version {versionBranch = [1,18,4], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/happy"}}),("hsc2hs",ConfiguredProgram {programId = "hsc2hs", programVersion = Just (Version {versionBranch = [0,67], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/hsc2hs"}}),("hscolour",ConfiguredProgram {programId = "hscolour", programVersion = Just (Version {versionBranch = [1,13], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/home/chris/.cabal/bin/HsColour"}}),("hugs",ConfiguredProgram {programId = "hugs", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/hugs"}}),("ld",ConfiguredProgram {programId = "ld", programVersion = Nothing, programArgs = ["-x"], programLocation = FoundOnSystem {locationPath = "/usr/bin/ld"}}),("pkg-config",ConfiguredProgram {programId = "pkg-config", programVersion = Just (Version {versionBranch = [0,22], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/pkg-config"}}),("ranlib",ConfiguredProgram {programId = "ranlib", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/ranlib"}}),("strip",ConfiguredProgram {programId = "strip", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/strip"}}),("tar",ConfiguredProgram {programId = "tar", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/bin/tar"}})], withPackageDB = UserPackageDB, withVanillaLib = True, withProfLib = False, withSharedLib = False, withProfExe = False, withOptimization = NormalOptimisation, withGHCiLib = True, splitObjs = False, stripExes = True, progPrefix = "", progSuffix = ""}